// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*replaceByFeeMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (r ReplaceByFee) MarshalJSON() ([]byte, error) {
	type ReplaceByFee struct {
		Id         hexutil.Uint64 `json:"id"`
		MaxTxPrice hexutil.Uint64 `json:"max_tx_price"`
	}
	var enc ReplaceByFee
	enc.Id = hexutil.Uint64(r.Id)
	enc.MaxTxPrice = hexutil.Uint64(r.MaxTxPrice)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (r *ReplaceByFee) UnmarshalJSON(input []byte) error {
	type ReplaceByFee struct {
		Id         *hexutil.Uint64 `json:"id"`
		MaxTxPrice *hexutil.Uint64 `json:"max_tx_price"`
	}
	var dec ReplaceByFee
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Id != nil {
		r.Id = uint64(*dec.Id)
	}
	if dec.MaxTxPrice != nil {
		r.MaxTxPrice = uint64(*dec.MaxTxPrice)
	}
	return nil
}
